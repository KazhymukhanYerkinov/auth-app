{"version":3,"sources":["components/Modal/modal.tsx","pages/main-page.tsx","pages/login-page.tsx","redux/redux-store.ts","App.tsx","index.tsx"],"names":["Modal","onCloseModal","isOpen","cls","classNames","className","onClick","MainPage","React","useState","setIsOpen","validationSchema","Yup","shape","login","min","max","required","password","Login","initialValues","onSubmit","formData","console","log","isSubmitting","errors","touched","name","placeholder","id","type","htmlFor","disabled","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddlewere","App","exact","path","render","ReactDOM","StrictMode","document","getElementById"],"mappings":"uNA2BeA,EApBoB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,OAE5CC,EAAMC,IAAW,QAAS,CAAC,KAAQF,IAEzC,OACE,qBAAKG,UAAaF,EAAlB,SACE,sBAAKE,UAAY,eAAjB,UAEE,qBAAKA,UAAY,cAAjB,gLAEA,sBAAKA,UAAY,gBAAjB,UACE,wBAAQA,UAAY,wBAAwBC,QAAYL,EAAxD,kCACA,wBAAQI,UAAY,oBAApB,qCCSKE,EAvBE,WACb,MAA4BC,IAAMC,UAAS,GAA3C,mBAAOP,EAAP,KAAeQ,EAAf,KAUA,OACI,qBAAKL,UAAY,OAAjB,SACI,sBAAKA,UAAY,cAAjB,UACI,qBAAKA,UAAY,cAAjB,oCACA,wBAAQA,UAAY,wBAAwBC,QAZpC,WAChBI,GAAU,IAWF,sBAEA,cAAC,EAAD,CAAOT,aAVE,WACjBS,GAAU,IASqCR,OAAWA,U,gBClB5DS,EAAmBC,MAAaC,MAAM,CAC1CC,MAAOF,MACJG,IAAI,EAAG,wJACPC,IAAI,IAAK,gKACTC,SAAS,sLAEZC,SAAUN,MACPG,IAAI,EAAG,wJACPC,IAAI,IAAK,gKACTC,SAAS,wLAmECE,EA/DmB,WAMhC,OACE,qBAAKd,UAAU,OAAf,SAEE,sBAAKA,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,4CAGA,cAAC,IAAD,CACEe,cAAe,CACbN,MAAO,GACPI,SAAU,IAEZG,SAhBS,SAACC,GAChBC,QAAQC,IAAIF,EAASR,MAAOQ,EAASJ,WAgB/BP,iBAAqBA,EANvB,SAQG,gBAAGc,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,OAAQC,EAAzB,EAAyBA,QAAzB,OACC,eAAC,IAAD,WACE,cAAC,IAAD,CACEC,KAAK,QACLvB,UAAWF,IAAI,QAAS,CAAC,eAAgBuB,EAAOZ,OAASa,EAAQb,QACjEe,YAAY,4IAEZH,EAAOZ,OAASa,EAAQb,OAAU,uBAAMT,UAAY,cAAlB,cAAmCqB,EAAOZ,MAA1C,OAEpC,cAAC,IAAD,CACEc,KAAK,WACLvB,UAAWF,IAAI,QAAS,CAAC,eAAgBuB,EAAOR,UAAYS,EAAQT,WACpEW,YAAY,6GAEZH,EAAOR,UAAYS,EAAQT,UAAa,uBAAMb,UAAY,cAAlB,cAAmCqB,EAAOR,SAA1C,OAE1C,sBAAKb,UAAY,gBAAjB,UACE,cAAC,IAAD,CAAOyB,GAAK,UAAUzB,UAAY,WAAW0B,KAAO,WAAWH,KAAO,YACtE,uBAAOI,QAAU,UAAU3B,UAAY,iBAAvC,kGAGF,wBAAQA,UAAU,wBAAwB4B,SAAaR,EAAvD,0D,gBCvDVS,EAAcC,YAAgB,IAOnBC,EAFHC,YAAYH,EAAaI,YAAgBC,MCYtCC,EAbH,WACV,OACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAUJ,MAAUA,EAApB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOK,OAAK,EAACC,KAAO,IAAIC,OAAW,kBAAM,cAAC,EAAD,OACzC,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAO,SAASC,OAAW,kBAAM,cAAC,EAAD,e,OCRxDC,IAASD,OACP,cAAC,IAAME,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.68dc7bcb.chunk.js","sourcesContent":["import classNames from 'classnames';\r\n\r\ntype PropsType = {\r\n  onCloseModal: () => void\r\n  isOpen: boolean\r\n}\r\n\r\nconst Modal: React.FC<PropsType> = ({ onCloseModal, isOpen }) => {\r\n\r\n  const cls = classNames('modal', {'open': isOpen});\r\n\r\n  return (\r\n    <div className = {cls}>\r\n      <div className = 'modal__inner'>\r\n\r\n        <div className = 'modal__desc'> Вы действительно хотите выйти? </div>\r\n\r\n        <div className = 'modal__footer'>\r\n          <button className = 'button button__cancel' onClick = { onCloseModal }> Нет </button>\r\n          <button className = 'button button__ok'> Да </button>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport { Modal } from \"../components\";\r\n\r\n\r\n\r\nconst MainPage = () => {\r\n    const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n    const onOpenModal = () => {\r\n        setIsOpen(true);\r\n    }\r\n\r\n    const onCloseModal = () => {\r\n        setIsOpen(false)\r\n    }\r\n\r\n    return (\r\n        <div className = 'main'>\r\n            <div className = 'main__inner'>\r\n                <div className = 'main__title'> Welcome to Main Page </div>\r\n                <button className = 'button button__logout' onClick = { onOpenModal }> logout </button>\r\n\r\n                <Modal onCloseModal = { onCloseModal } isOpen = { isOpen }/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainPage;\r\n\r\n","import cls from 'classnames';\r\nimport { Field, Form, Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  login: Yup.string()\r\n    .min(2, 'Минимальная длина 2 символов')\r\n    .max(100, 'Максимальная длина 100 символов')\r\n    .required('Поле, обязательное для заполнения'),\r\n  \r\n  password: Yup.string()\r\n    .min(2, 'Минимальная длина 2 символов')\r\n    .max(100, 'Максимальная длина 100 символов')\r\n    .required('Поле, обязательное для заполнения')\r\n});\r\n\r\n\r\nconst Login:React.FC<PropsType> = () => {\r\n\r\n  const onSubmit = (formData: LoginFormType) => {\r\n    console.log(formData.login, formData.password);\r\n  }\r\n\r\n  return (\r\n    <div className='auth'>\r\n\r\n      <div className='auth__inner'>\r\n        <div className='auth__header'>\r\n          Логин\r\n        </div>\r\n        <Formik\r\n          initialValues={{\r\n            login: '',\r\n            password: '',\r\n          }}\r\n          onSubmit={onSubmit}\r\n          validationSchema = { validationSchema }>  \r\n\r\n          {({ isSubmitting, errors, touched }) => (\r\n            <Form>\r\n              <Field\r\n                name='login'  \r\n                className={cls('input', {'input--error': errors.login && touched.login })} \r\n                placeholder='Введите свой email или телефон' \r\n              />\r\n              { errors.login && touched.login && (<span className = 'auth__error'> { errors.login } </span>) }\r\n\r\n              <Field \r\n                name='password' \r\n                className={cls('input', {'input--error': errors.password && touched.password })} \r\n                placeholder='Введите свой пароль' \r\n              />\r\n              { errors.password && touched.password && (<span className = 'auth__error'> { errors.password } </span>) }\r\n\r\n              <div className = 'auth__save-me'>\r\n                <Field id = 'save_me' className = 'checkbox' type = 'checkbox' name = 'save_me' /> \r\n                <label htmlFor = 'save_me' className = 'checkbox__text'> Запомнить меня </label>\r\n              </div>\r\n\r\n              <button className='button button__submit' disabled = { isSubmitting }> Войти </button>\r\n            </Form>\r\n          )}\r\n\r\n        </Formik>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\ntype LoginFormType = {\r\n  login: string,\r\n  password: string,\r\n}\r\n\r\ntype PropsType = {\r\n\r\n}\r\n\r\nexport default Login;\r\n\r\n\r\n","import thunkMiddlewere from 'redux-thunk';\r\nimport { applyMiddleware, combineReducers, createStore } from 'redux';\r\n\r\n\r\nlet rootReducer = combineReducers({\r\n  \r\n});\r\n\r\n// @ts-ignore\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddlewere));\r\n\r\nexport default store;","import { Provider } from 'react-redux';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport { Login, MainPage } from './pages';\nimport store from './redux/redux-store';\n\n\n\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Provider store = { store }>\n        <Switch>\n          <Route exact path = '/' render = { () => <MainPage /> } />\n          <Route exact path = '/login' render = { () => <Login /> } />\n        </Switch>\n      </Provider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport './scss/app.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}